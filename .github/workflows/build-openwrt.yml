# This is a basic workflow to help you get started with Actions

name: Openwrt-x86

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths:
    - '.github/workflows'
  pull_request:
    branches: [ "main" ]
    paths:
    - '.github/workflows'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
 
  build:
  
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
       
      - uses: lehoangnb/openwrt-imagebuilder-action@main
        with:
          profile: x86-64
          openwrt-version: 22.03.5
          packages: base-files block-mount bnx2-firmware busybox ca-bundle ca-certificates cgi-io dnsmasq dropbear e2fsprogs ethtool firewall4 fstools fwtool getrandom grub2 grub2-bios-setup grub2-efi igmpproxy ip-tiny ip6tables-zz-legacy ipset iptables-mod-conntrack-extra iptables-mod-ipopt iptables-zz-legacy jansson4 jshn jsonfilter kernel kmod-amazon-ena kmod-amd-xgbe kmod-bnx2 kmod-button-hotplug kmod-crypto-crc32c kmod-crypto-hash kmod-crypto-kpp kmod-crypto-lib-chacha20 kmod-crypto-lib-chacha20poly1305 kmod-crypto-lib-curve25519 kmod-crypto-lib-poly1305 kmod-e1000 kmod-e1000e kmod-forcedeth kmod-fs-vfat kmod-hwmon-core kmod-i2c-algo-bit kmod-i2c-core kmod-igb kmod-igc kmod-input-core kmod-ip6tables kmod-ipt-conntrack kmod-ipt-conntrack-extra kmod-ipt-core kmod-ipt-ipopt kmod-ipt-ipset kmod-ipt-raw kmod-ixgbe kmod-lib-crc-ccitt kmod-lib-crc32c kmod-libphy kmod-macvlan kmod-mdio kmod-mdio-devres kmod-mii kmod-nf-conntrack kmod-nf-conntrack6 kmod-nf-flow kmod-nf-ipt kmod-nf-ipt6 kmod-nf-log kmod-nf-log6 kmod-nf-nat kmod-nf-reject kmod-nf-reject6 kmod-nfnetlink kmod-nft-core kmod-nft-fib kmod-nft-nat kmod-nft-offload kmod-nls-base kmod-nls-cp437 kmod-nls-iso8859-1 kmod-nls-utf8 kmod-phy-realtek kmod-ppp kmod-pppoe kmod-pppox kmod-pps kmod-ptp kmod-r8169 kmod-slhc kmod-tg3 kmod-tun kmod-udptunnel4 kmod-udptunnel6 kmod-wireguard libblkid1 libblobmsg-json20220515 libc libcap libcomerr0 libext2fs2 libf2fs6 libgcc1 libip4tc2 libip6tc2 libipset13 libiptext0 libiptext6-0 libiwinfo-data libiwinfo-lua libiwinfo20210430 libjson-c5 libjson-script20220515 liblua5.1.5 liblucihttp-lua liblucihttp0 liblzo2 libmnl0 libncurses6 libnftnl11 libnl-tiny1 libopenssl1.1 libpcre libpopt0 libpthread librt libsmartcols1 libss2 libubox20220515 libubus-lua libubus20220601 libuci-lua libuci20130104 libuclient20201210 libucode20220812 libustream-wolfssl20201210 libuuid1 libuv1 libwebsockets-full libwolfssl5.5.4.ee39414e libxtables12 logd logrotate lua luci luci-app-firewall luci-app-mwan3 luci-app-openvpn luci-app-opkg luci-app-ttyd luci-app-udpxy luci-app-wireguard luci-base luci-compat luci-lib-base luci-lib-ip luci-lib-jsonc luci-lib-nixio luci-mod-admin-full luci-mod-network luci-mod-status luci-mod-system luci-proto-ipv6 luci-proto-ppp luci-proto-wireguard luci-ssl luci-theme-bootstrap mkf2fs mtd mwan3 nano netifd nftables-json odhcp6c odhcpd-ipv6only openssh-sftp-server openvpn-openssl openwrt-keyring opkg partx-utils ppp ppp-mod-pppoe procd procd-seccomp procd-ujail px5g-wolfssl r8169-firmware rpcd rpcd-mod-file rpcd-mod-iwinfo rpcd-mod-luci rpcd-mod-rrdns terminfo ttyd ubox ubus ubusd uci uclient-fetch ucode ucode-mod-fs ucode-mod-ubus ucode-mod-uci udpxy uhttpd uhttpd-mod-ubus urandom-seed urngd usign wget-ssl wireguard-tools xtables-legacy zlib 
          #files: test/files
          rootfs-size: 2048
          #debug: 1
          #disabled-services: dhcp
         # extra-image-name: useless
          
      - run: |
         sudo chmod -R a+rw ./bin
         ls $(pwd)/bin/*.img.gz || exit 1 #return error if build error
         #gzip -d --force ./bin/rootfs-squashfs.img.gz || true
         #docker run --rm \
         #  -v $(pwd)/bin:/openwrt \
         #  tianon/qemu \
         #    qemu-system-arm \
         #      -M virt-2.9 \
         #      -kernel /openwrt/zImage \
         #      -no-reboot -nographic \
         #      -nic user -nic user  \
         #      -drive file=/openwrt/rootfs-squashfs.img,if=virtio,format=raw  \
         #      -append "root=/dev/vda"

      # Upload artifact
      - uses: actions/upload-artifact@v3
        with:
          name: openwrt-binary
          path: $(pwd)/bin/*.img.gz
